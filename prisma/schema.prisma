generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Product {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    description String?
    price       Float
    categoryId  String
    stock       Int
    images      Json
    reviews     Json?
    createdAt   String?
}

enum Role {
    USER
    ADMIN
}

model User {
    id             String    @id @default(auto()) @map("_id") @db.ObjectId
    name           String?
    email          String?   @unique
    emailVerified  DateTime?
    image          String?
    accounts       Account[]
    hashedPassword String
    createdAt      DateTime  @default(now())
    updatedAt      DateTime  @updatedAt
    role           Role      @default(USER)
}

model Account {
    id                String  @id @default(auto()) @map("_id") @db.ObjectId
    userId            String  @db.ObjectId
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.String
    access_token      String? @db.String
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.String
    session_state     String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

// generator client {
//     provider = "prisma-client-js"
// }

// datasource db {
//     provider = "mongodb"
//     url      = env("DATABASE_URL")
// }

// model Product {
//     id          String   @id @default(auto()) @map("_id") @db.ObjectId // MongoDB _id
//     name        String
//     description String
//     price       Float
//     stock       Int
//     categoryId  String   @db.ObjectId
//     category    Category @relation(fields: [categoryId], references: [id])
//     images      Image[]
//     reviews     Review[]
// }

// model Image {
//     id        String  @id @default(auto()) @map("_id") @db.ObjectId
//     color     String
//     colorCode String
//     image     String
//     productId String  @db.ObjectId
//     product   Product @relation(fields: [productId], references: [id])
// }

// model Review {
//     id        String  @id @default(auto()) @map("_id") @db.ObjectId
//     userId    String
//     rating    Int
//     comment   String
//     productId String  @db.ObjectId
//     product   Product @relation(fields: [productId], references: [id])
// }

// model Category {
//     id       String    @id @default(auto()) @map("_id") @db.ObjectId
//     name     String
//     products Product[]
// }
